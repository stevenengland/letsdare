---
name: Code Checks (Linting and Testing)

"on":
  pull_request:
    branches:
      - master
    paths-ignore:
      - "*.md"
      - "*version.txt"
      - "docs/**"
      - "tools/**"
  schedule:
    - cron: "0 5 * * 5"  # At 07:00 on Friday

jobs:
  # JOB to run change detection via https://github.com/dorny/paths-filter
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      lint: ${{ steps.filter.outputs.lint }}
      test: ${{ steps.filter.outputs.test }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - name: Create filters
        uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell
          filters: |
            lint:
              - '**/*.py'
              - '**/*.yml'
              - '**/*.yaml'
            test:
              - 'app/**'
              - 'config/**'
              - 'docker/**'
              - 'requirements/**'
              - 'scripts/**'
              - 'tests/**'
              - 'docker-compose*'
              - 'Makefile'
              - 'manage.py'
              - 'pyproject.toml'
              - 'setup.cfg'

  lint:
    runs-on: ubuntu-latest
    needs: [ changes ]
    if: ${{ needs.changes.outputs.lint == 'true' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Build the docker image
        uses: ./.github/actions/docker_build_dev
        with:
          docker-hub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-hub-token: ${{ secrets.DOCKER_HUB_TOKEN_RO }}

      - name: Load environment vars
        id: dotenv
        uses: falti/dotenv-action@v1.0.4
        with:
          path: .github/workflows/env_vars.txt
          log-variables: true

      - name: Run linter
        run: make docker_lint

  test:
    runs-on: ubuntu-latest
    needs: [ changes ]
    if: ${{ needs.changes.outputs.test == 'true' }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Show current user info
        run: |
          echo "ID:   $EUID"
          echo "Name: `whoami`"

      - name: Build the docker image
        uses: ./.github/actions/docker_build_dev
        with:
          docker-hub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
          docker-hub-token: ${{ secrets.DOCKER_HUB_TOKEN_RO }}

      - name: Load environment vars
        id: dotenv
        uses: falti/dotenv-action@v1.0.4
        with:
          path: .github/workflows/env_vars.txt
          log-variables: true

      - name: Create test images
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 5
          retry_wait_seconds: 20
          max_attempts: 2
          command: |
            chmod +x ./tools/create_test_images.sh
            ./tools/create_test_images.sh

      - name: Configure base system
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          retry_wait_seconds: 20
          max_attempts: 2
          command: |
            chmod +x ./tools/run_ansible_provisioning.sh
            ./tools/run_ansible_provisioning.sh

      - name: Run tests
        run: make docker_test
